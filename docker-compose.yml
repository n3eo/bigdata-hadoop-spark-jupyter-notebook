version: "3"

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    volumes:
      - namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop-hive.env
    ports:
      - "8889:50070"
    networks:
      - bigdata
    
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    volumes:
      - datanode:/hadoop/dfs/data
    env_file:
      - ./hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "namenode:8020"
    networks:
      - bigdata
      
  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    volumes:
      - datanode2:/hadoop/dfs/data
    env_file:
      - ./hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "namenode:8020"
    networks:
      - bigdata
      
  datanode3:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    volumes:
      - datanode3:/hadoop/dfs/data
    env_file:
      - ./hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "namenode:8020"
    networks:
      - bigdata
      
  datanode4:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    volumes:
      - datanode4:/hadoop/dfs/data
    env_file:
      - ./hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "namenode:8020"
    networks:
      - bigdata

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop2.7.4-java8
    environment:
      SERVICE_PRECONDITION: "namenode:8020 datanode:50070 datanode2:50070 datanode3:50070 datanode4:50070"
    env_file:
      - ./hadoop-hive.env
    networks:
      - bigdata
  
  spark-master:
    build: 
      dockerfile: Dockerfiles/DockerfileMaster
      context: .
    container_name: spark-master
    ports:
      - "8080:8080"
      - "4041:4040"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - PYSPARK_PYTHON=/spark/bin/pyspark
      - PYSPARK_DRIVER_PYTHON=python3
    networks:
      - bigdata
    volumes: 
      - ./spark-env.sh:/spark/conf/spark-env.sh

  spark-worker-1:
    build: 
      dockerfile: Dockerfiles/DockerfileWorker
      context: .
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - PYSPARK_PYTHON=/spark/bin/pyspark
      - PYSPARK_DRIVER_PYTHON=python3
      - SPARK_EXECUTOR_CORES=2
      - SPARK_EXECUTOR_MEMORY=2g
    networks:
      - bigdata
    volumes: 
      - ./spark-env.sh:/spark/conf/spark-env.sh
      - ./worker.sh:/worker.sh
      
  spark-worker-2:
    build: 
      dockerfile: Dockerfiles/DockerfileWorker
      context: .
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - PYSPARK_PYTHON=/spark/bin/pyspark
      - PYSPARK_DRIVER_PYTHON=python3
      - SPARK_EXECUTOR_CORES=2
      - SPARK_EXECUTOR_MEMORY=2g
    networks:
      - bigdata
    volumes: 
      - ./spark-env.sh:/spark/conf/spark-env.sh
      - ./worker.sh:/worker.sh

  jupyter:
    build: 
      dockerfile: Dockerfiles/Dockerfile
      context: .
    ports:
      - "8888:8888"
      - "4040:4040"
    networks: 
      - bigdata
    volumes: 
      - ./work:/home/jupyter/work
    environment: 
      - "SPARKMONITOR_UI_HOST=spark-master"
      - "SPARKMONITOR_UI_PORT=8080"

volumes:
  namenode:
  datanode:
  datanode2:
  datanode3:
  datanode4:

networks:
  bigdata: